 
================================================================================================================

For clone / download gin repository

git clone https://github.com/customercaresolutions/gin -b test-gin-new


git config --get-all user.name "rajeshvkothari"
git config --global user.email "53209625+rajeshvkothari@users.noreply.github.com"
git config --global user.name "rajeshvkothari"
git config --global gitreview.username rajeshvkothari

------------------------------------------------------------

If you want to go in any function in vs code then press " control " and go on that function.

======================================================================================================================

How login to WinSCP for new session :

  - New session
  - Host name {VM IP}
  - User name = Ubuntu
  - Password = {cciPrivateKey} ..Advance / ssh / Authentication / ... / cciPrivateKey
  - login
  
=======================================================================================================================

TASKS:

-----------06-Jun

- Go though GIN readme.
   . Read/understand Ubuntu commands in googls
   . Read documents of Docker, kubernetes and terraform in google
   
- Read Golang tutorials:
   https://www.w3schools.com/go
   
   execute programs/examples in vscode.
  
 https://www.guru99.com/google-go-tutorial.html	    

---------
   
Read/understand ubuntu commands in googlsRupesh, 11:15
frontend\src\components\CytoscapeGraph\CytoscapeGraph1.tsx
  cd -change directory
 
 
====================================================================================================================
 

 git -for store the data
 
 postman - to send request direct to backend, no needs of frontend
  >rest request to get information from backend 
  >rest request to post store information 
  
 putty - to loggine another remout device, server 
          needs to commands to axic the server
		  
 winscp (windows secure copy) - for axis files 
                                no needs any cammands for information, files are allready there

 Vs code (visual studio code) - to manage (edite) the code from github

 COMMANDS===

 Su (sudo) - allow user to switch ti anouthe account and get all permission 

 Cci - national Correct coding initiative = use for edit
 
 kiali -the console for istio service mesh - use for checking , validation , configuration(join) 
 
 Sed - stands for 'stream editor 
   
 -----------------------------------
  
 Docker - to run application securely in container & package
 
 Kubernets - to help to build cloud-native micro-services based apps
 
 Terraform - Allow user to allow their infrastructure simply by using configuration files & version control 
 
=================================================================================================================
 
 If have some issue in ansible's "vault.sh" command so do this :
 
   - login to WinSCP with sam vm ip
   - go /opt/app/gin-deployments/gin-ansible
   - Check 'launch_vault.sh' file who generate main token in 'temp' file.
   - Check 'Root token' in 'temp' file
   - Replace temp file token in to below files:
      
      /opt/app/gin-deployments/gin-ansible/main.tf
     /opt/app/gin-deployments/gin-ansible/variables.tfvars
    /opt/app/gin-deployments/gin-ansible/gin-deploy-properties.yml

--------------------------------------------------------------------

If we want another ubuntu version vm and created vm is on another ubuntu version then ,
   add the ubuntu version 'image' in WinSCP
       /opt/app/gin-deployments/gin-ansible/main.tf - ami
	   
	   18.04 - ami-07c1207a9d40bc3bd
	   22.04 - ami-024e6efaf93d85776
=================================================================================================================
 7-6-2023
 
 How to commit a change in github.
 

 1. go to explorer folder & edit require file ( in explorere folder )
 
 2. 'control S ' for save the code

 3.  go to source control folder & check the file
 
 4. click on " + " for stage changes
 
 5. give name the commit ( file ) & Click on check or commit button 
 
 6. go on commits section then click on your commit name & check file changes
 
 7. then click on push button to push the commit on github
 
 8. again click on push button ^
 
 9. go on github on google & open gin repository
 
 10. click on commits & check the files
 
 
---------------

It means compiler starts successfully:
       
	   
==================================================================================
	   
 Generate clout for tosca model & compare them using comparison tool
	 
    1 . start Dgraph :

      - open 3 terminal windows of cmd 
	  
      - Run following commands in first cmd : 
        
        . cd C:\dgraph	
        . dgraph zero
      
	  -	 Run following commands in second cmd : 
        
        . cd C:\dgraph	
        . dgraph alpha --lru_mb 2048 --zero localhost:5080
		
	  -   Run following commands in third cmd : 
        
        . cd C:\dgraph	
		. dgraph-ratel 
		
		
	2 . start compiler service
	   
	   - Go to vscode & go in explorer. 
	  
	   - Open gin\compiler\compiler_test.go .
	  
	   - Click on "debug test" button .
	  
	   - Wait till following message come in console :
	       "Starting TOSCA compiler service at port 10010"
		   
	3 . Send model compile request to compiler through postman   
	  
	   - Open postman application
	  
	   - In collection section go to "local"  & open 'db save' request for particular model
	  
	   - Check the output & force parameter
      
	   - change the output file name in postman & send the request again 
	  
       - click on send button 
	  
	   - Go in 'C:\gin\compiler' folder & check clout file with given name is generated

       - Move clout files into ' C:\gin\utility\compareClouts 'folder	   
		
	4. Run compare clout utility 
	
	   - Open 4th cmd terminal & run following commands:

         . cd C:\gin\utility\compareClouts
		
		 . compareClouts.exe {file1}.json {file2}.json 
	
	   - If below error show 
	
	      'compareclouts.exe' is not recognized as an internal or external command,
		   operable program or batch file.
	
	   - Then run this command
	
	     . go build
		 . compareClouts.exe {file1}.json {file2}.json
	
	   - The output should contain following message:
	  
	     Files [{file1}.json] and [{file2}.json] match!
		 

============================================================================================================================

9/6/2023

Debugging :

From VS Code sidebar menu, click on the 'Run and Debug' button, then click on 'create a launch.json file'.  

= for this above situation RDP ( Remote desktop connection )
 go in launch kiali - |>
 

 Some time some issue to open RDP , then reboot the aws server ( select instance - instance state - reboot instance 

 
 error: error loading config file "/etc/rancher/k3s/k3s.yaml": open /etc/rancher/k3s/k3s.yaml: permission denied
 =for this above error use / add   "sudo chmod 777 /etc/rancher/k3s/k3s.yaml" this  command .



 
 hack/run-kiali.sh --tmp-root-dir $HOME/tmp --enable-server false --prometheus-url http://3.144.166.173:31056
 
 
=========================================================================================================================================
17-06-2023

sudo vi  { path of file }
for exit to folder : Esc - : - q - !

for save and exit the folder : Ecs - : - wq 

------------------------------------------

failed-allocate-directory-watch/    for this error 

sudo vi  { path of file }     ex . /etc/sysctl.d/60-fs-inotify.conf


===================================================================================================================


19-06-2023


For check all GIN pods are in running state use below command :

    kubectl get pods -n gin 

	
	kubectl get svc -n gin
	
=================================================================================================================

How create BOOTSTRAP SERVER	& gin server trough terraform :

go to the in ubuntu app:
 - cd /home/ubuntu
 - rm -r gin-ansible
 - git clone https://github.com/customercaresolutions/gin-ansible --recurse-submodules -b v1.5.0
 - cp /mnt/c/Rushikesh_shinde/keys/cciPrivateKey gin-ansible/bootstrap/resources/
  
 terraform commands : 
 - cd /home/ubuntu/gin-ansible/bootstrap
 - terraform init
 - terraform apply -var "github_user={USERNAME_OF_GIT}" -var "github_token={TOKEN_OF_GIT}" -var "aws_instance_name={NAME_OF_AWS_INSTANCE}" -var "domain_name={DOMAIN_NAME}" -var "enable_ssl=false" -var "service_mesh=linkerd" -auto-approve

 If we create vm for clients do -> "enable_ssl=true"
 If we creat vm for us do       -> "enable_ssl=false"

terraform apply -var "github_user=rajeshvkothari" -var "github_token=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" -var "aws_instance_name=gin-demo-ak" -var "domain_name=cci-dev.com" -var "enable_ssl=false" -var "service_mesh=linkerd" -auto-approve

===========================================================================================================

== rm -r {foldername} this command use for folder delete+

=======================================================================================================================================

21-06-2023 

How open remote server directly in local vs code :

    - install this extension on vscode : 
	   Remote-ssh
	   Remote-ssh editing configurationfile
									   
	- restart vs code
    - click on >< this below button & click on "connect to host"  =>  "Add new ssh host"
	
    - Provide following command for ssh :
	   ssh ubuntu@{AWS_SERVER_IP} -i {PATH_TO_cciPrivateKey}
	   
	   ssh ubuntu@3.12.83.135 -i C:/Users/MAYUR/.ssh/cciPrivateKey
	   
	   Note: If permission issue comes while ssh then copy cciPrivateKey to c:/Users/{USER}/.ssh directory.
	  
   ssh ubuntu@{vm id} -i C:/Users/MAYUR/.ssh/cciPrivateKey
   
---------	   
	   
	
How Clone gin from Windows Terminal :   git clone https://github.com/customercaresolutions/gin
	                             
===============================================================================================================================

22-06-2023


bufio : a package used for buffered IO (input/output). 
        Buffering IO is a technique used to temporarily accumulate the results for an IO operation before transmitting it forward. 

crypto/tls : TLS is a cryptographic protocol that provides end-to-end security of data sent between applications over the Internet.



-How access kiali gui:

https://{NAME_OF_AWS_INSTANCE}-kiali.{DOMAIN_NAME}/kiali
Ex.
https://gin-demo-rk-kiali.cci-dev.com/kiali

after that follow this readme : https://github.com/customercaresolutions/gin/blob/main/README.md#dcaf4-model

==============================================================================================================================

28-06-2023
 
 svc for ports
 
If dcaf model deploy is go on pending the do following steps :

   - delete model from 'argo'
   
   - run following commands in putty
     kubectl patch svc tosca-dgraph -n gin -p '{"spec": {"type": "LoadBalancer"}}'
     kubectl delete ns dcaf
	 
   - creat another instance from same model 
   
   - deploy again 
   
=========================================================================================================

EX. kubectl patch svc {pod name} -n {namespace} -p '{"spec": {"type": "LoadBalancer"}}'

--------------------

- For enable dgraph dashboard/ports run this commands in putty :

  * kubectl get svc -n gin
  
  Check the "tosca-dgraph & dgraph-ratel"  port if port is no available use below command :

    kubectl patch svc tosca-dgraph -n gin -p '{"spec": {"type": "LoadBalancer"}}'
    kubectl patch svc dgraph-ratel -n gin -p '{"spec": {"type": "LoadBalancer"}}'
	
- For get the ports:

   kubectl get svc -n gin
   
-----* For open dgraph gui - {VM_IP}:{DGRAPH-RATEL_PORT}

      - Open gui
      - Dgraph server URL:  http://{VM_IP}:{TOSCA-DGRAPH_PORT}	  

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

- For enable kiali/gui 's dashboard or ports run this commands in putty :

    kubectl patch svc kiali -n istio-system -p '{"spec": {"type": "LoadBalancer"}}'
	
- For get kiali/gui port :

    kubectl get svc -n istio-system
	
-----------------------------------------------------------------------

vm ip:tosca dgraph port

Ex. 18.118.112.176:32657

paste this url on crome

===========================================================================================================

For uninstall gin pods

 helm uninstall {POD_NAME} -n {NAMESPACE}

 helm uninstall gin -n gin 
 helm uninstall dgraph-1690964806 -n gin
------------------------------

- For install gin pods
 helm install gin --kubeconfig=$HOME/.kube/config /home/ubuntu/gin-utils/helm-charts/gin-0.3.tgz --namespace gin
 
- For install dgraph pods
 helm install --kubeconfig=$HOME/.kube/config /home/ubuntu/gin-utils/helm-charts/dgraph.tgz -f /home/ubuntu/gin-utils/helm-charts/dgraph-values.yaml --namespace gin --generate-name
 
=========================================================================================================

For see gin pods

 kubectl get pods -n gin

For see below pods port :

   kubectl get svc -n gin 

tick-influx-influxdb                                                                                 
tick-tel-telegraf                                                                                          
tick-kap-kapacitor                                                                                            
tick-chron-chronograf                                                                                
zookeeper                                                                                                  
kafka12                                                                                                      
dmaap                                                                                      
argo-server                              
httpbin                                   
minio                                     
postgres                                 
jaeger-all-in-one-headless                
jaeger-all-in-one                        
dgraph-1690964806-dgraph-zero-headless                                                                   
dgraph-1690964806-dgraph-alpha-headless                                                                      
dgraph-1690964806-dgraph-zero                                                                    
tosca-dgraph                                                                               
dgraph-ratel                                                                                              
tosca-so                                                                          
tosca-workflow                                                                                                 
tosca-policy                                                                                                   
tosca-gawp                                                                                                     
tosca-compiler    
                                                                                   
===========================================================================================================================

For see current pods logs :

kubectl logs -n gin -c tosca-compiler {ID_OF_POD}

EX. kubectl logs -n gin -c tosca-compiler gin-tosca-compiler-777ddcff8f-ngthq

----------------------------------------

If pods get continuously restart and if we want to see previous created pods log use this command :

kubectl logs -n gin -c tosca-compiler {ID_OF_POD} --previous

EX. kubectl logs -n gin -c tosca-compiler gin-tosca-compiler-777ddcff8f-cm79s --previous

==========================================================================================================================
